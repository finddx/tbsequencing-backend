# Generated by Django 4.1.5 on 2023-04-14 13:27

from django.db import migrations, models
import django.db.models.deletion
import django.db.models.functions.text


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("biosql", "0002_initial"),
        ("genphen", "0001_genphensql_manual"),
    ]

    operations = [
        migrations.CreateModel(
            name="GeneName",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("gene_db_crossref_id", models.IntegerField()),
                ("gene_name", models.TextField()),
            ],
            options={
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LocusTag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("gene_db_crossref_id", models.IntegerField()),
                ("locus_tag_name", models.TextField()),
            ],
            options={
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MultipleVariantDecomposition",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("mnv_variant_id", models.IntegerField()),
                ("single_variant_id", models.IntegerField()),
            ],
            options={
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PreferredAnnotation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("variant_id", models.IntegerField()),
                ("gene_name", models.TextField()),
                ("predicted_effect", models.CharField(max_length=1024)),
                ("hgvs_value", models.CharField(max_length=1024)),
                ("mii", models.IntegerField()),
            ],
            options={
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ProteinId",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("protein_db_crossref_id", models.IntegerField()),
                ("gene_db_crossref_id", models.IntegerField()),
            ],
            options={
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="RankedAnnotation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("variant_id", models.IntegerField()),
                ("annotation_id", models.BigIntegerField()),
                ("gene_name", models.TextField()),
                ("predicted_effect", models.CharField(max_length=1024)),
                ("hgvs_value", models.CharField(max_length=1024)),
                ("distance_to_reference", models.IntegerField()),
                ("rank", models.BigIntegerField()),
            ],
            options={
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Annotation",
            fields=[
                (
                    "annotation_id",
                    models.BigAutoField(primary_key=True, serialize=False),
                ),
                ("hgvs_value", models.CharField(db_index=True, max_length=8192)),
                ("predicted_effect", models.CharField(max_length=8192)),
                ("distance_to_reference", models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Country",
            fields=[
                (
                    "three_letters_code",
                    models.CharField(
                        max_length=3,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("country_id", models.IntegerField(unique=True)),
                ("two_letters_code", models.CharField(max_length=2, unique=True)),
                ("country_usual_name", models.CharField(max_length=1024)),
                ("country_official_name", models.CharField(max_length=1024, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Drug",
            fields=[
                ("drug_id", models.AutoField(primary_key=True, serialize=False)),
                ("drug_name", models.CharField(max_length=8192, unique=True)),
                ("drug_code", models.CharField(max_length=8192, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="DrugSynonym",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("drug_name_synonym", models.CharField(max_length=128, unique=True)),
                (
                    "code",
                    models.CharField(
                        choices=[("three_letter_code", "Three letter code")],
                        max_length=128,
                        null=True,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EpidemCutoffValue",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("medium_name", models.CharField(max_length=8192)),
                ("value", models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name="FormattedAnnotationPerGene",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("predicted_effect", models.CharField(max_length=1024)),
                ("nucleotidic_annotation", models.CharField(max_length=1024)),
                ("proteic_annotation", models.CharField(max_length=1024, null=True)),
                ("distance_to_reference", models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name="GeneDrugResistanceAssociation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tier", models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name="GrowthMedium",
            fields=[
                ("medium_id", models.AutoField(primary_key=True, serialize=False)),
                ("medium_name", models.CharField(max_length=8192, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="PDSAssessmentMethod",
            fields=[
                ("method_id", models.AutoField(primary_key=True, serialize=False)),
                ("method_name", models.CharField(max_length=1024, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Variant",
            fields=[
                ("variant_id", models.BigAutoField(primary_key=True, serialize=False)),
                ("chromosome", models.CharField(max_length=8192)),
                ("position", models.IntegerField(db_index=True)),
                ("reference_nucleotide", models.TextField()),
                ("alternative_nucleotide", models.CharField(max_length=8192)),
            ],
        ),
        migrations.CreateModel(
            name="VariantToAnnotation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "annotation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="genphen.annotation",
                    ),
                ),
                (
                    "variant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="genphen.variant",
                    ),
                ),
            ],
        ),
        migrations.AddIndex(
            model_name="variant",
            index=models.Index(
                models.F("chromosome"),
                models.F("position"),
                django.db.models.functions.text.MD5("reference_nucleotide"),
                django.db.models.functions.text.MD5("alternative_nucleotide"),
                name="variant_chr_pos_ref_alt_key",
            ),
        ),
        migrations.AddField(
            model_name="genedrugresistanceassociation",
            name="drug",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="genphen.drug",
            ),
        ),
        migrations.AddField(
            model_name="genedrugresistanceassociation",
            name="gene_db_crossref",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.DO_NOTHING,
                to="biosql.dbxref",
            ),
        ),
        migrations.AddField(
            model_name="formattedannotationpergene",
            name="gene_db_crossref",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.DO_NOTHING,
                to="biosql.dbxref",
            ),
        ),
        migrations.AddField(
            model_name="formattedannotationpergene",
            name="variant",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="genphen.variant",
            ),
        ),
        migrations.AddField(
            model_name="epidemcutoffvalue",
            name="drug",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="genphen.drug",
            ),
        ),
        migrations.AddField(
            model_name="drugsynonym",
            name="drug",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="synonyms",
                to="genphen.drug",
            ),
        ),
        migrations.AddField(
            model_name="annotation",
            name="reference_db_crossref",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.DO_NOTHING,
                to="biosql.dbxref",
            ),
        ),
        migrations.AddField(
            model_name="annotation",
            name="variants",
            field=models.ManyToManyField(
                related_name="annotations",
                through="genphen.VariantToAnnotation",
                to="genphen.variant",
            ),
        ),
        migrations.AddConstraint(
            model_name="varianttoannotation",
            constraint=models.UniqueConstraint(
                models.F("variant"),
                models.F("annotation"),
                name="varianttoannotation_va_an_key",
            ),
        ),
        migrations.AddConstraint(
            model_name="annotation",
            constraint=models.UniqueConstraint(
                models.F("reference_db_crossref"),
                models.F("hgvs_value"),
                models.F("predicted_effect"),
                name="annotation_dbxref_hgvs_value_predicted_effect_uniq",
            ),
        ),
    ]
